---
- name: deploy Hadoop
  block:
    - name: install needed packages
      package:
        name:
          - wget
          - sshfs
        state: present
      tags: hadoop, configureHadoop

    - name: create Hadoop users
      import_tasks: ./create_hadoop_users.yaml
      tags: hadoop, configureHadoop

    - name: create directory for hadoop distro
      file:
        path: "{{ hadoop_target_dir }}"
        state: directory
      tags: hadoop, installHadoop

    - name: install OpenJDK
      import_tasks: ./install_openjdk.yaml
      vars:
        jre_url: "{{ hadoop_jre_url }}"
        jre_local_pkg: "{{ hadoop_jre_local_pkg }}"
        jre_target_dir: "{{ hadoop_target_dir }}/jre"
      tags: jre, hadoop, installHadoop

    - name: download and install Hadoop
      import_tasks: ./download_and_install_hadoop.yaml
      tags: hadoop, installHadoop

    - name: create default log dir
      file:
        path: "{{ hadoop_distro_home }}/logs"
        state: directory
      tags: hadoop, installHadoop

    - name: change owner to hdfs and allow group hadoop rwx
      file:
        path: "{{ hadoop_target_dir }}"
        owner: hdfs
        group: hadoop
        mode: u=rwx,g=rwx,o=r
        recurse: yes
        state: directory
      tags: hadoop, configureHadoop

    - name: Configure config files
      when: "'hadoop' in group_names"
      import_tasks: ./configure_config_files.yaml
      tags: hadoop, configureHadoop

    - name: set JAVA_HOME in hadoop-env.sh
      lineinfile:
        path: "{{ hadoop_distro_home }}/etc/hadoop/hadoop-env.sh"
        line: export JAVA_HOME={{ hadoop_target_dir }}/jre/current
        insertafter: "# export JAVA_HOME="
        regexp: "^export JAVA_HOME=.*$"
      tags: hadoop, configureHadoop

    - name: configure Hadoop
      import_tasks: ./configure_hadoop.yaml
      tags: hadoop, configureHadoop, configureHadoopHA

    - name: format namenode
      import_tasks: ./format_namenode.yaml
      tags: hadoop

    - name: configure datanodes
      when: "'hadoop_datanodes' in group_names"
      import_tasks: ./configure_datanodes.yaml
      tags: hadoop

    - name: download sample JARs for teragen, terasort
      import_tasks: ./download_sample_JARs.yaml
      tags: hadoop, hadoopInstallSampleJARs

    - name: start namenodes
      become: True
      become_user: hdfs
      import_tasks: ./start_namenodes.yaml
      tags: hadoop, startHadoopServices, startNameNodes

    - name: leaving safemode
      when: inventory_hostname == groups['hadoop_namenodes'][0]
      shell: "{{ hadoop_distro_home }}/bin/hdfs dfsadmin -safemode leave"
      become: True
      become_user: hdfs
      tags: hadoop, startHadoopServices, startNameNodes

    - name: change owner of hdfs '/' to hdfs:hadoop
      when: inventory_hostname == groups['hadoop_namenodes'][0]
      shell: "{{ hadoop_distro_home }}/bin/hdfs dfs -chown hdfs:hadoop /"
      become: True
      become_user: hdfs
      tags: hadoop, startHadoopServices, startNameNodes

    - name: change permissions of hdfs '/' to 775
      when: inventory_hostname == groups['hadoop_namenodes'][0]
      shell: "{{ hadoop_distro_home }}/bin/hdfs dfs -chmod 775 /"
      become: True
      become_user: hdfs
      tags: hadoop, startHadoopServices, startNameNodes

    - name: start manager nodes
      import_tasks: ./start_manager_nodes.yaml
      tags: hadoop, startHadoopServices, startManagerNodes

    - name: start datanodes
      import_tasks: ./start_datanodes.yaml
      tags: hadoop, startHadoopServices, startDataNodes


- name: Setup Hadoop CLI utils
  tags: installUtils
  block:
    - name: Get user HOME directory
      command: echo $HOME
      register: user_home_cmd
      changed_when: False

    - name: Define user home directory
      set_fact:
        user_home: "{{ user_home_cmd.stdout }}"
      changed_when: False

    - name: Checking if bin export line exists "{{ user_home }}/.bashrc"
      shell: grep -c "/opt/hadoop/current/bin$" "{{ user_home }}/.bashrc" || true
      register: test_bin_expt_line
      changed_when: False

    - name: Linking utils binaries
      lineinfile:
        dest: "{{ user_home }}/.bashrc"
        line: 'export PATH=$PATH:/opt/hadoop/current/bin:/opt/hadoop/jre/current/bin'
      when: test_bin_expt_line.stdout == "0"
